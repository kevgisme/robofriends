{"version":3,"sources":["images/Aaron Morris.png","images/Alex Dombrandt.png","images/Archie White.png","images/Ben Tapuai.png","images/Brett Herron.png","images/Cadan Murley.png","images/Chris Robshaw.png","images/Danny Care.png","images/Dino Lamb.png","images/Elia Elia.png","components/Card.js","components/CardList.js","components/SearchBox.js","components/Scroll.js","components/Players.js","components/ErrorBoundry.js","containers/App.js","serviceWorker.js","index.js"],"names":["module","exports","Card","name","position","src","id","className","alt","width","height","CardList","players","map","user","i","key","SearchBox","searchChange","type","placeholder","onChange","Scroll","props","style","overflowY","border","children","require","ErrorBoundry","state","hasError","error","info","this","setState","Component","App","onSearchChange","event","searchfield","target","value","filteredRobots","filter","player","toLowerCase","includes","length","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console","message"],"mappings":"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","file":"static/js/main.4e4d40f3.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Aaron Morris.733883a5.png\";","module.exports = __webpack_public_path__ + \"static/media/Alex Dombrandt.a32e419e.png\";","module.exports = __webpack_public_path__ + \"static/media/Archie White.a8ff470d.png\";","module.exports = __webpack_public_path__ + \"static/media/Ben Tapuai.059d3121.png\";","module.exports = __webpack_public_path__ + \"static/media/Brett Herron.f2e67dfb.png\";","module.exports = __webpack_public_path__ + \"static/media/Cadan Murley.8c9622ea.png\";","module.exports = __webpack_public_path__ + \"static/media/Chris Robshaw.7c6e5b26.png\";","module.exports = __webpack_public_path__ + \"static/media/Danny Care.eca6b880.png\";","module.exports = __webpack_public_path__ + \"static/media/Dino Lamb.36fc7d83.png\";","module.exports = __webpack_public_path__ + \"static/media/Elia Elia.d55bf25a.png\";","import React from 'react';\n\nconst Card = ({name, position, id, src}) => {\n\n\treturn (\n\t\t<div className=\"tc bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5\">\n\t\t\t<img src={src} alt='players' width='200' height ='200'/>\n\t\t\t<div>\n\t\t\t\t<h2>{name}</h2>\n\t\t\t\t<p>{position}</p>\n\t\t\t</div>\n\t\t</div>\n\t\t);\n}\n\nexport default Card;\n","import React from 'react';\nimport Card from './Card';\n\nconst CardList = ({ players }) => {\n\t\n\treturn (\n\t<div>\n\t\t{\n\t\t\tplayers.map((user, i) => {\n\t\t\t\t\treturn ( \n\t\t\t\t\t<Card\n\t\t\t\t\t  key={players.id}\n\t\t\t\t\t  id={players[i].id}\n\t\t\t\t\t  name={players[i].name}\n\t\t\t\t\t  position ={players[i].position}\n\t\t\t\t\t  src ={players[i].src}\n\t\t\t\t\t  />\n\t\t\t\t\t);\n\t\t\t\t})\n\t\t}\n\t</div>\n\t);\n}\n\nexport default CardList;","import React from 'react';\n\nconst SearchBox = ({ searchChange }) => {\n\treturn (\n\t\t<div className='pa2'>\n\t\t\t<input \n\t\t\t\tclassName='pa3 ba b--green bg-lightest-blue'\n\t\t\t\ttype='search' \n\t\t\t\tplaceholder='search players'\n\t\t\t\tonChange ={searchChange}\n\t\t\t/>\n\t\t</div>\n\t\t);\n}\n\nexport default SearchBox;","import React from 'react';\n\nconst Scroll = (props) => {\n\treturn (\n\t\t<div style={{ overflowY: 'scroll', border: '1px solid black', height: '800px'}}>\n\t\t\t{props.children}\n\t\t</div>\n\t);\n};\n\nexport default Scroll;","export const players = [\n  {\n    id: 1,\n    name: 'Aaron Morris',\n    position: 'Outside Back',\n    src: require(\"../images/Aaron Morris.png\")\n  },\n  {\n    id: 2,\n    name: 'Alex Dombrandt',\n    position: 'Number 8',\n    src: require(\"../images/Alex Dombrandt.png\")\n  },\n  {\n    id: 3,\n    name: 'Archie White',\n    position: 'Back Row',\n    src: require(\"../images/Archie White.png\")\n  },\n  {\n    id: 4,\n    name: 'Ben Tapuai',\n    position: 'Centre',\n    src: require(\"../images/Ben Tapuai.png\")\n  },\n  {\n    id: 5,\n    name: 'Brett Herron',\n    position: 'Half Back',\n    src: require(\"../images/Brett Herron.png\")\n  },\n  {\n    id: 6,\n     name: 'Cadan Murley',\n    position: 'Outside Back',\n    src: require(\"../images/Cadan Murley.png\")\n  },\n  {\n    id: 7,\n     name: 'Chris Robshaw',\n    position: 'Back Row',\n    src: require(\"../images/Chris Robshaw.png\")\n  },\n  {\n    id: 8,\n     name: 'Danny Care',\n    position: 'Half Back',\n    src: require(\"../images/Danny Care.png\")\n  },\n  {\n    id: 9,\n     name: 'Dino Lamb',\n    position: 'Lock',\n    src: require(\"../images/Dino Lamb.png\")\n  },\n  {\n    id: 10,\n     name: 'Elia Elia',\n    position: 'Hooker',\n    src: require(\"../images/Elia Elia.png\")\n  }\n];\n","import React, { Component } from 'react';\n\nclass ErrorBoundry extends Component {\n\tconstructor (props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\thasError: false\n\t\t}\n\t}\n\ncomponentDidCatch(error, info) {\n\tthis.setState({ hasError:true })\n}\n\n\trender() {\n\t\tif (this.state.hasError) {\n\t\t\treturn <h1>Oooops. That is not good</h1>\n\t\t}\n\t\treturn this.props.children\n\t}\n}\n\nexport default ErrorBoundry;","import React, { Component } from 'react';\nimport CardList from '../components/CardList';\nimport SearchBox from '../components/SearchBox';\nimport Scroll from '../components/Scroll';\nimport './App.css';\nimport { players } from '../components/Players';\nimport ErrorBoundry from '../components/ErrorBoundry';\n\n\nclass App extends Component {\n\tconstructor() {\n\t\tsuper()\n\t\tthis.state = {\n\t\t\tplayers: players,\n\t\t\tsearchfield:''\t\n\t\t}\n\t}\n\n\t// componentDidMount() {\n\t// \tconsole.log(this.props.store)\n\t// \tfetch('https://jsonplaceholder.typicode.com/users')\n\t// \t.then(response=> response.json())\n\t// \t.then(users => this.setState({ robots: users }))\n\t// }\n\n\tonSearchChange = (event) => {\t\n\t\tthis.setState({ searchfield: event.target.value })\n\t}\n\n\trender() {\n\t\tconst { players, searchfield } = this.state;\n\t\tconst filteredRobots = players.filter(player => {\n\t\t\treturn player.name.toLowerCase().includes(searchfield.toLowerCase());\t\t\n\t\t})\n\t\t return !players.length ? \n\t\t\t<h1>Loading</h1> :\n\t\t( \n\t\t<div className='tc'>\n\t\t\t<h1 className='f1'>Player Analysis</h1>\n\t\t\t<SearchBox searchChange ={this.onSearchChange}/>\n\t\t\t<Scroll>\n\t\t\t\t<ErrorBoundry>\n\t\t\t\t<CardList players={filteredRobots}/>\n\t\t\t\t</ErrorBoundry>\n\t\t\t</Scroll>\n\t\t</div>\n\t\t);\n\t}\n\t\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App';\nimport * as serviceWorker from './serviceWorker';\nimport 'tachyons';\n\n\n\nReactDOM.render(\n\t\t<App/>\n,document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}